<!--<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://code.alibabatech.com/schema/dubbo
    http://code.alibabatech.com/schema/dubbo/dubbo.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">

    &lt;!&ndash;放行资源&ndash;&gt;
    <http pattern="/*.html" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>

    &lt;!&ndash; 对add.do放行&ndash;&gt;
    <http pattern="/seller/add.do" security="none"></http>

    &lt;!&ndash;页面拦截规则
    use-expressions表示是否使用spel表达式，默认等于true表示使用，false不适用
    &ndash;&gt;
    <http use-expressions="false">
        &lt;!&ndash;拦截路径标签，pattern表示路径属性，/**表示拦截当前根目录下以及子目录下的所有资源
            access表示访问的权限，只能是USER角色的才能访问，必须写前缀ROLE_
            如果access直接等于ROLE_USER的话，必须在设置不适用spel表达式才可以
          &ndash;&gt;
        <intercept-url pattern="/**" access="ROLE_SELLER"/>
        &lt;!&ndash;系统自动生成登录页面，开启表单登录  &ndash;&gt;
        &lt;!&ndash;<form-login login-page="/login.html"  default-target-url="/admin/index.html"
                    authentication-failure-url="/login.html"/>&ndash;&gt;
        <form-login login-processing-url="/login"
                    login-page="/shoplogin.html"
                    default-target-url="/admin/index.html"
                    authentication-failure-url="/shoplogin.html"
                    always-use-default-target="true"/>

        &lt;!&ndash;关闭跨站请求伪造&ndash;&gt;
        <csrf disabled="true"></csrf>
        &lt;!&ndash;设置springSecurity支持iframe框架&ndash;&gt;
        <headers>
            <frame-options policy="SAMEORIGIN"></frame-options>
        </headers>
        &lt;!&ndash; 注销功能 &ndash;&gt;
        <logout logout-success-url="/login.html"></logout>
    </http>
    &lt;!&ndash;认证管理器  &ndash;&gt;
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="passwordEncoder"></password-encoder> &lt;!&ndash;在自定义认定类中引入加密&ndash;&gt;
        </authentication-provider>
    </authentication-manager>

    &lt;!&ndash; 对userDetailsService接口进行注入操作 &ndash;&gt;
    <beans:bean id="userDetailsService" class="com.pinyougou.service.UserDetailsServiceImpl">
        &lt;!&ndash; spring中的ioc进行注入操作 &ndash;&gt;
        <beans:property name="presidentService" ref="sellerService"></beans:property>
    </beans:bean>

    &lt;!&ndash;调用sellerService接口  &ndash;&gt;
    <dubbo:application name="pinyougou_shop_web"/>
    <dubbo:registry address="zookeeper://192.168.25.128:2181"/>
    <dubbo:reference id="presidentService" interface="com.pinyougou.president.service.SellerService"></dubbo:reference>

    &lt;!&ndash;加密类&ndash;&gt;
    <beans:bean id="passwordEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></beans:bean>
</beans:beans>-->
